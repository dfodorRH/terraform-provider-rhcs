#!/bin/bash
set -x
archs=(amd64 arm64)
oses=(linux darwin windows)
if [[ -z "$VERSION" ]]; then
    echo "Must provide version to prepare release" 1>&2
    exit 1
fi
mkdir -p releases

prepare_release() {
for os in ${oses[@]}
do
  for arch in ${archs[@]}
  do
    if [[ $os == "windows" ]]; then
        extension=".exe"
    fi
    GOOS=${os} GOARCH=${arch} go build -ldflags="${ldflags}" -o terraform-provider-rhcs_${os}_${arch}
    mv terraform-provider-rhcs_${os}_${arch} terraform-provider-rhcs_v$VERSION${extension}
    zip releases/terraform-provider-rhcs_$VERSION_${os}_${arch}.zip CHANGELOG.md LICENSE README.md terraform-provider-rhcs_v$VERSION${extension}
    rm terraform-provider-rhcs_v$VERSION
    cp terraform-registry-manifest.json releases/terraform-provider-rhcs_$VERSION_manifest.json
    sha256sum releases/*zip releases/terraform-provider-rhcs_$VERSION_manifest.json > releases/terraform-provider-rhcs_$VERSION_SHA256SUMS
  done
done
}

prepare_release
